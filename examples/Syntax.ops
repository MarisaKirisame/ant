(* unit *)
let _ = ();;

(* int *)
let _ = 4611686018427387903;;

(* bool *)
let _ = true;;
let _ = false;;

(* builtin, application, and string literal *)
let _ = print_endline "hello, world";;

(* variable and single let binding *)
let _ =
  let x = 10 in
  x;;

(* constructor application *)
let _ = A 10;;

(* arithmetic operation *)
let _ = 1 + 2 * 3 / 4 + (5 + 6) * 7;;

(* tuple *)
let _ = (1, 2, 3);;
let _ = 4, 5, 6;;

(* array *)
let _ = [1; 2; 3];;

(* lambda *)
let f = fun x -> fun y -> x + y;;

(* let *)
let _ =
  let x = 1 + 2 in
  let y = 2 + 4 in
  x + y;;

let _ =
  ignore 10;
  ignore 20;
  30;;

let _ =
  let rec f =
    fun x -> f x
  in
  f;;

(* selection *)
let _ = x.m;;

(* match *)
let _ = match x with
  | 1 -> 2
  | 2 -> 4
  | 3 -> 8
  | _ -> 16
  ;;
let _ = match y with
  | Some x -> x
  | Some _ -> 1
  | None -> 0
  ;;
let _ = match z with
  | 1, 2 -> 1
  | 2, _ -> 2
  ;;
let _ = match w with
  | true -> false
  | false -> true
  ;;
let _ = match m with
  | () -> ()
  | n -> n
  ;;

(* if *)
let _ = if true then 1 + 2 else if false then 3 + 4 else 5 + 6;;


let _ = ();;